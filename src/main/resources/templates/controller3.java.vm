package $!{package.Controller};


import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import javax.validation.Valid;


import com.neusoft.core.restful.AppResponse;
import com.github.pagehelper.PageInfo;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.*;
import org.springframework.beans.factory.annotation.Autowired;
import $!{package.Entity}.$!{entity};
#set($voPackage=$package.Entity.replace("entity","vo"))
import $!{voPackage}.$!{entity}VO;
#set($wrapperPackage=$package.Entity.replace("entity","wrapper"))
import $!{package.Service}.$!{table.serviceName};
#if($!{superControllerClassPackage})
import $!{superControllerClassPackage};
#end
#if(!$!{superEntityClass})
#end

import java.util.List;

/**
 * $!{table.comment} 控制器
 *
 * @author $!{author}
 * @since $!{date}
 */
@RestController
@RequestMapping("#if($!{package.ModuleName})/$!{package.ModuleName}#end/$!{cfg.entityKey}")
@Api(value = "$!{table.comment}", tags = "$!{table.comment}接口")
#if($!{superControllerClass})
public class $!{table.controllerName} extends $!{superControllerClass} {
#else
public class $!{table.controllerName} {
#end

	private static final Logger logger = LoggerFactory.getLogger( $!{table.controllerName}.class);

	@Autowired
	private $!{table.serviceName} $!{table.entityPath}Service;


	/**
	 * 详情 $!{table.comment}
	 */
	@GetMapping("/detail")
	@ApiOperation(value = "详情", notes = "传入$!{table.entityPath}")
	public AppResponse<$!{entity}VO> get$!{entity}Info(@ApiParam(value = "主键", required = true) @RequestParam String id) {
		return $!{table.entityPath}Service.get$!{entity}Info(id);
	}

	/**
	 * 分页 $!{table.comment}
	 */
	@GetMapping("/list")
	@ApiOperation(value = "分页", notes = "传入$!{table.entityPath}")
	public AppResponse<PageInfo<List<$!{entity}VO>>> select$!{entity}ByPage(@Valid  $!{entity} $!{table.entityPath}) {
		return $!{table.entityPath}Service.select$!{entity}ByPage($!{table.entityPath});
	}


	/**
	 * 新增 $!{table.comment}
	 */
	@PostMapping("/save")
	@ApiOperation(value = "新增", notes = "传入$!{table.entityPath}")
	public AppResponse save$!{entity}(@Valid @RequestBody $!{entity} $!{table.entityPath}) {
		return $!{table.entityPath}Service.save$!{entity}($!{table.entityPath});
	}

	/**
	 * 修改 $!{table.comment}
	 */
	@PostMapping("/update")
	@ApiOperation(value = "修改", notes = "传入$!{table.entityPath}")
	public AppResponse update$!{entity}ById(@Valid @RequestBody $!{entity} $!{table.entityPath}) {
		return $!{table.entityPath}Service.update$!{entity}ById($!{table.entityPath});
	}



	/**
	 * 删除 $!{table.comment}
	 */
	@PostMapping("/remove")
	@ApiOperation(value = "逻辑删除", notes = "传入ids")
	public AppResponse  delete$!{entity}Logic(@ApiParam(value = "主键集合", required = true) @RequestParam String ids) {
		return $!{table.entityPath}Service.delete$!{entity}Logic(ids);
	}



}
